# Generated by Django 5.2.5 on 2025-09-19 19:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseConocimiento',
            fields=[
                ('base_conocimiento_id', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta', models.TextField(unique=True)),
                ('respuesta', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'bases_conocimiento',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('cliente_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_cliente', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(max_length=20, unique=True)),
                ('ultima_interaccion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'clientes',
            },
        ),
        migrations.CreateModel(
            name='Habitacion',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('habitacion_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_habitacion', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio_por_hora', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disponible', models.BooleanField(default=True)),
                ('capacidad', models.IntegerField(default=2)),
            ],
            options={
                'db_table': 'habitaciones',
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('persona_id', models.AutoField(primary_key=True, serialize=False)),
                ('primer_nombre', models.CharField(max_length=30)),
                ('segundo_nombre', models.CharField(blank=True, max_length=30, null=True)),
                ('apellido_paterno', models.CharField(max_length=30)),
                ('apellido_materno', models.CharField(blank=True, max_length=30, null=True)),
                ('documento_identidad', models.CharField(max_length=15, unique=True)),
                ('dv', models.CharField(max_length=1, verbose_name='Dígito Verificador')),
                ('mail', models.EmailField(max_length=254, unique=True)),
                ('cod_tel_pais', models.CharField(blank=True, max_length=5, null=True)),
                ('cod_telefono', models.CharField(blank=True, max_length=5, null=True)),
                ('telefono_persona', models.CharField(blank=True, max_length=15, null=True)),
                ('cod_tel_pais_wp', models.CharField(blank=True, max_length=5, null=True)),
                ('cod_tel_wp', models.CharField(blank=True, max_length=5, null=True)),
                ('whatsapp_persona', models.CharField(blank=True, max_length=15, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
                'db_table': 'personas',
            },
        ),
        migrations.CreateModel(
            name='PreguntaFrecuente',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('pregunta_frecuenta_id', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta_corta_boton', models.CharField(help_text="Texto para el botón de WhatsApp (MÁXIMO 20 CARACTERES). Ej: 'Ver Horarios'", max_length=20, unique=True)),
                ('pregunta_larga', models.CharField(help_text="La pregunta completa que el bot usará para buscar. Ej: '¿Cuál es el horario de check-in?'", max_length=255)),
                ('respuesta', models.TextField(help_text='La respuesta oficial a la pregunta.')),
                ('palabras_clave', models.CharField(help_text='Palabras clave separadas por comas (ej: horario, check-in, entrada, llegar)', max_length=255)),
                ('es_saludo_inicial', models.BooleanField(default=False, help_text='Marcar si esta pregunta y sus botones deben usarse como el mensaje de bienvenida.')),
            ],
            options={
                'db_table': 'preguntas_frecuente',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('rol_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_rol', models.CharField(max_length=50)),
                ('codigo_rol', models.CharField(max_length=10, unique=True)),
                ('descripcion_rol', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='TipoHabitacion',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('tipo_habitacion_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_tipo_habitacion', models.CharField(help_text='Ej: Suite Jacuzzi', max_length=100, unique=True)),
                ('descripcion', models.TextField(help_text='Una descripción atractiva de la habitación.')),
                ('precio_por_noche', models.DecimalField(decimal_places=2, help_text='Precio en CLP', max_digits=8)),
                ('palabras_clave', models.CharField(help_text='Palabras clave separadas por comas (ej: jacuzzi, cama king, premium)', max_length=255)),
            ],
            options={
                'db_table': 'tipos_habitacion',
            },
        ),
        migrations.CreateModel(
            name='Conversacion',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('conversacion_id', models.AutoField(primary_key=True, serialize=False)),
                ('inicio_conversacion', models.DateTimeField(auto_now_add=True)),
                ('fin_conversacion', models.DateTimeField(blank=True, null=True)),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.cliente')),
            ],
            options={
                'db_table': 'conversaciones',
            },
        ),
        migrations.CreateModel(
            name='Mensaje',
            fields=[
                ('mensaje_id', models.AutoField(primary_key=True, serialize=False)),
                ('remitente', models.CharField(max_length=50)),
                ('contenido', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.conversacion')),
            ],
            options={
                'db_table': 'mensajes',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PreguntaDesconocida',
            fields=[
                ('pregunta_desconocida_id', models.AutoField(primary_key=True, serialize=False)),
                ('texto_pregunta', models.TextField(verbose_name='Texto de la Pregunta del Usuario')),
                ('fecha_recibida', models.DateTimeField(auto_now_add=True)),
                ('revisada', models.BooleanField(default=False, help_text='Marcar cuando la pregunta haya sido gestionada.')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.cliente', verbose_name='Cliente Asociado')),
            ],
            options={
                'verbose_name': 'Pregunta Desconocida',
                'verbose_name_plural': 'Preguntas Desconocidas',
                'db_table': 'preguntas_desconocida',
                'ordering': ['-fecha_recibida'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('reserva_id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_hora_inicio', models.DateTimeField()),
                ('fecha_hora_fin', models.DateTimeField()),
                ('estado', models.CharField(default='pendiente', max_length=50)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.cliente')),
                ('habitacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.habitacion')),
            ],
            options={
                'db_table': 'reservas',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('user_profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('persona', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perfil', to='api.persona')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
                'db_table': 'users_profile',
            },
        ),
        migrations.CreateModel(
            name='UserRol',
            fields=[
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('user_rol_id', models.AutoField(primary_key=True, serialize=False)),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.rol')),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles', to='api.userprofile')),
            ],
            options={
                'verbose_name': 'Rol de Usuario',
                'verbose_name_plural': 'Roles de Usuario',
                'db_table': 'users_roles',
                'unique_together': {('user_profile', 'rol')},
            },
        ),
    ]
